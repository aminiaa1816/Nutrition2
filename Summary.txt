      We (Rachel and Alen) worked on a basic recipe book compiler with an emphasis on allergen identification. In essence, the project asks users to input their known allergens -- great for people with known allergies or who want to be mindful of others with allergies whom they are serving at a dinner party or luncheon --from any one of the 11most common allergens (this is hardcoded and can be modified to add more as necessary). Once the user has selected one of the allergens, she can then choose the type of recipe she would like to make from one of several recipe categories pulled from an (surprisingly, free!) API. After the user selects which recipe she would like to make, the project pulls the recipe from the API, along with quantity needed of each ingredient and any other special directions that need to be followed.
      As the recipe is displayed, so too is the grocery list minus the actual ingredients that contain the allergens. This omission allows people to not mistakenly purchase the ingredients, and it allows them to possibly substitute the recipe, or to substitute (or omit) the individual ingredient that has an allergen. In an ideal world (and with a little more expertise) we would have been able to store multiple recipes and possibly even have users manually input recipes, too. That seemed too complicated, and one of the struggles we initially had was finding an appropriate API given how niche our topic was (some of the APIs cost upwards of $150). 
      Other ideas we considered included using more nutritional information to create grocery lists (carbs, fat, proteins, etc.), and having multiple recipes store at once to create a virtual cookbook. However, given time, API, and know-how limitations, we stuck with allergens and were pleased overall with the learnings from the exercise.
      
